#!/usr/bin/env stap
# Operação - Nome - Caminho - Tempo - Conteúdo
# string - string - string - time - string
# 150 - 300 - 500
# 70632472-cf5a-4872-b1a8-8202bf6a8b71

function sep:string () {
  return "\n#***70632472-cf5a-4872-b1a8-8202bf6a8b71\n"
}

function parent:string (file) {
  directory = ""
  mountpoint = ""
  dentry = @cast(file, "file")->f_path->dentry->d_parent
  parent = kernel_string(@cast(dentry, "dentry")->d_name->name)
  mnt = @cast(file, "file")->f_path->mnt
  root = kernel_string(@cast(mnt, "vfsmount")->mnt_root->d_name->name)
  if (parent == root)
    directory = parent
  while (mountpoint != root) {
    while (parent != root) {
      directory = "/" . parent . directory
      dentry = @cast(dentry, "dentry")->d_parent
      parent = kernel_string(@cast(dentry, "dentry")->d_name->name)
    }
    dentry = @cast(mnt, "vfsmount")->mnt_mountpoint
    parent = kernel_string(@cast(mnt, "vfsmount")->mnt_mountpoint->d_name->name)
    mountpoint = parent
    mnt = @cast(mnt, "vfsmount")->mnt_parent
  }
  return directory
}

probe vfs.write.return {
  if ((pid() == target()) && (ret > 0) && (devname != "N/A")) {
    printf("Escrita %s %s %s %s %s %d %s %s %s", sep(),
           kernel_string($file->f_path->dentry->d_name->name), sep(),
           parent($file), sep(),
           gettimeofday_s(), sep(),
           kernel_string($buf), sep())
  }
}


probe vfs.read.return {
  if ((pid() == target()) && (ret > 0) && (devname != "N/A")) {
    printf("Leitura %s %s %s %s %s %d %s %s %s", sep(),
           kernel_string($file->f_path->dentry->d_name->name), sep(),
           parent($file), sep(),
           gettimeofday_s(), sep(),
           kernel_string($buf), sep())
  }
}
